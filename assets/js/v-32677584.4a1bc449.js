"use strict";(self.webpackChunknew=self.webpackChunknew||[]).push([[426],{2858:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-32677584",path:"/notes/CSS%E8%BF%87%E6%B8%A1%E3%80%81%E5%8A%A8%E7%94%BB%E4%B8%8E%E5%8F%98%E5%BD%A2.html",title:"CSS 过渡、动画与变形",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"CSS过渡",slug:"css过渡",children:[]},{level:2,title:"CSS动画",slug:"css动画",children:[{level:3,title:"关键帧@keyframes",slug:"关键帧-keyframes",children:[]},{level:3,title:"动画属性",slug:"动画属性",children:[]}]},{level:2,title:"CSS变形",slug:"css变形",children:[{level:3,title:"平移",slug:"平移",children:[]},{level:3,title:"旋转",slug:"旋转",children:[]},{level:3,title:"缩放",slug:"缩放",children:[]}]}],filePathRelative:"notes/CSS过渡、动画与变形.md",git:{updatedTime:1639149438e3,contributors:[{name:"pangqingbo",email:"2362698454@qq.com",commits:2}]}}},1350:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const t=(0,a(6252).uE)('<h1 id="css-过渡、动画与变形" tabindex="-1"><a class="header-anchor" href="#css-过渡、动画与变形" aria-hidden="true">#</a> CSS 过渡、动画与变形</h1><h2 id="css过渡" tabindex="-1"><a class="header-anchor" href="#css过渡" aria-hidden="true">#</a> CSS过渡</h2><p>通过过渡可以指定一个属性发生变化时的切换方式，提升用户体验</p><ul><li>格式：<div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token property">transition</span><span class="token punctuation">:</span> transition-property transition-duration transition-timing-function transition-delay\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li>transition-property: 指定要执行过渡的属性 <ul><li>多个属性间使用,隔开</li><li>如果所有属性都需要过渡，则使用all关键字</li></ul></li><li>transition-duration: 指定过渡效果的持续时间</li><li>transition-timing-function: 过渡的时序函数 <ul><li>可选值：</li><li>ease 默认值，慢速开始，先加速，再减速</li><li>linear 匀速运动</li><li>ease-in 加速运动</li><li>ease-out 减速运动</li><li>ease-in-out 先加速 后减速</li><li>cubic-bezier() 来指定时序函数</li><li>steps() 分步执行过渡效果，可以指定第二个值： <ul><li>end ， 在时间结束时执行过渡(默认值)</li><li>start ， 在时间开始时执行过渡</li></ul></li></ul></li><li>transition-delay: 过渡效果的延迟，等待一段时间后在执行过渡</li></ul><h2 id="css动画" tabindex="-1"><a class="header-anchor" href="#css动画" aria-hidden="true">#</a> CSS动画</h2><p>动画和过渡类似，不过动画可以自动触发动态效果</p><h3 id="关键帧-keyframes" tabindex="-1"><a class="header-anchor" href="#关键帧-keyframes" aria-hidden="true">#</a> 关键帧@keyframes</h3><p>设置动画效果，必须先要设置一个关键帧，关键帧设置了动画执行每一个步骤</p><ul><li>格式：<div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@keyframes</span> keyframes-name</span> <span class="token punctuation">{</span>\n\t<span class="token selector">from</span> <span class="token punctuation">{</span>...<span class="token punctuation">}</span>\n\t<span class="token selector">20%</span> <span class="token punctuation">{</span>...<span class="token punctuation">}</span>\n\t<span class="token selector">30%</span> <span class="token punctuation">{</span>...<span class="token punctuation">}</span>\n\t<span class="token selector">40%</span> <span class="token punctuation">{</span>...<span class="token punctuation">}</span>\n\t...\n\t<span class="token comment">/* to可以写成100%，同理from也可以写成0% */</span>\n\t<span class="token selector">to</span> <span class="token punctuation">{</span>...<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li></ul><h3 id="动画属性" tabindex="-1"><a class="header-anchor" href="#动画属性" aria-hidden="true">#</a> 动画属性</h3><ul><li>animation-name: 要对当前元素生效的关键帧的名字</li><li>animation-duration: 动画的执行时间</li><li>animation-timing-function:动画执行的时序函数</li><li>animation-delay:动画的延时</li><li>animation-iteration-count:动画执行的次数</li><li>animation-direction:指定动画运行的方向 <ul><li>可选值：</li><li>normal 默认值 从 from 向 to运行 每次都是这样</li><li>reverse 从 to 向 from 运行 每次都是这样</li><li>alternate 从 from 向 to运行 重复执行动画时反向执行</li><li>alternate-reverse 从 to 向 from运行 重复执行动画时反向执行</li></ul></li><li>animation-play-state: 设置动画的执行状态 <ul><li>可选值：</li><li>running 默认值 动画执行</li><li>paused 动画暂停</li></ul></li><li>animation-fill-mode: 动画的填充模式 <ul><li>可选值：</li><li>none 默认值 动画执行完毕元素回到原来位置</li><li>forwards 动画执行完毕元素会停止在动画结束的位置</li><li>backwards 动画延时等待时，元素就会处于开始位置</li><li>both 结合了forwards 和 backwards</li></ul></li></ul><h2 id="css变形" tabindex="-1"><a class="header-anchor" href="#css变形" aria-hidden="true">#</a> CSS变形</h2><ul><li>CSS 变形（transforms）允许您移动、旋转、缩放和倾斜元素</li><li><strong>变形不会影响到页面的布局</strong></li></ul><h3 id="平移" tabindex="-1"><a class="header-anchor" href="#平移" aria-hidden="true">#</a> 平移</h3><ul><li>格式：<div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>100px<span class="token punctuation">)</span> <span class="token comment">/* 沿着x轴方向平移 */</span>\n<span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-100px<span class="token punctuation">)</span> <span class="token comment">/* 沿着y轴方向平移 */</span>\n<span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>50%<span class="token punctuation">)</span> <span class="token comment">/* 沿着z轴方向平移 */</span>\n<span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>50%<span class="token punctuation">)</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-50%<span class="token punctuation">)</span> <span class="token comment">/* 多个translate之间用空格隔开 */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li>平移元素，百分比是相对于自身计算的，所以通常可以利用平移使没有设置宽高的元素居中</li><li>z轴平移属于立体效果（近大远小），默认情况下网页是不支持透视，如果需要看见效果，必须要设置网页的视距：<div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">html</span><span class="token punctuation">{</span>\n\t<span class="token comment">/* 设置当前网页的视距为800px，人眼距离网页的距离 */</span>\n\t<span class="token property">perspective</span><span class="token punctuation">:</span> 800px\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ul><h3 id="旋转" tabindex="-1"><a class="header-anchor" href="#旋转" aria-hidden="true">#</a> 旋转</h3><ul><li>格式：<div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateX</span><span class="token punctuation">(</span>.25turn<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 沿x轴旋转0.25圈 */</span>\n<span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>.25turn<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 沿y轴旋转0.25圈 */</span>\n<span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateZ</span><span class="token punctuation">(</span>.25turn<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 沿z轴旋转0.25圈 */</span>\n<span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateZ</span><span class="token punctuation">(</span>.25turn<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>180deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>400px<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>400px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>180deg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token property">backface-visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span> <span class="token comment">/* 是否显示元素的背面 */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li></ul><h3 id="缩放" tabindex="-1"><a class="header-anchor" href="#缩放" aria-hidden="true">#</a> 缩放</h3><ul><li>格式：<div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token function">scaleX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">/* 水平方向缩放 */</span>\n<span class="token function">scaleY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">/* 垂直方向缩放 */</span>\n<span class="token function">scale</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">/* 双方向的缩放 */</span>\n<span class="token property">transform-origin</span><span class="token punctuation">:</span>20px 20px<span class="token punctuation">;</span> <span class="token comment">/* 变形的原点 默认值 center*/</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ul>',19),e={},p=(0,a(3744).Z)(e,[["render",function(n,s){return t}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);